<%- include('../layouts/main', { title: 'Vendors - Moment Crafters' }); %>

<div class="bg-white">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8">
      <div>
        <h1 class="text-3xl font-bold text-gray-900">Our Trusted Vendors</h1>
        <p class="mt-2 text-gray-600">Find the perfect professionals for your event</p>
      </div>
      <div class="mt-4 md:mt-0 w-full md:w-auto">
        <div class="relative">
          <select class="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md">
            <option>All Categories</option>
            <option>Photography</option>
            <option>Catering</option>
            <option>Venues</option>
            <option>Event Planning</option>
          </select>
        </div>
      </div>
    </div>

    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
      <% vendors.forEach(vendor => { %>
        <div class="vendor-card bg-white rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow duration-300">
          <div class="relative h-48 w-full">
            <img src="<%= vendor.images[0] || 'https://images.pexels.com/photos/169523/pexels-photo-169523.jpeg' %>" 
                 alt="<%= vendor.name %>" 
                 class="w-full h-full object-cover">
            <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent p-4">
              <h3 class="text-xl font-bold text-white"><%= vendor.name %></h3>
              <p class="text-gray-200"><%= vendor.category %></p>
            </div>
          </div>
          <div class="p-4">
            <div class="flex items-center mb-2">
              <div class="flex text-yellow-400">
                <% for (let i = 0; i < 5; i++) { %>
                  <i class="fas <%= i < vendor.rating ? 'fa-star' : 'fa-star-half-alt' %>"></i>
                <% } %>
              </div>
              <span class="text-gray-600 ml-2"><%= vendor.rating.toFixed(1) %> (<%= vendor.reviews %> reviews)</span>
            </div>
            <p class="text-gray-600 mb-4"><%= vendor.description.substring(0, 100) %>...</p>
            <div class="flex justify-between items-center">
              <span class="text-lg font-bold text-indigo-600">₹<%= vendor.priceRange.min %> - ₹<%= vendor.priceRange.max %></span>
              <div class="space-x-2">
                <a href="/vendors/<%= vendor.id %>" class="text-indigo-600 hover:text-indigo-800 font-medium">View Profile</a>
                <button class="book-now bg-indigo-600 text-white px-4 py-1 rounded-md hover:bg-indigo-700" 
                        data-amount="<%= vendor.priceRange.min %>">
                  Book Now
                </button>
              </div>
            </div>
          </div>
        </div>
      <% }); %>
    </div>

    <div class="mt-8 flex justify-center">
      <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
        <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
          <span class="sr-only">Previous</span>
          <i class="fas fa-chevron-left"></i>
        </a>
        <a href="#" aria-current="page" class="z-10 bg-indigo-50 border-indigo-500 text-indigo-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium">
          1
        </a>
        <a href="#" class="bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium">
          2
        </a>
        <a href="#" class="bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium">
          3
        </a>
        <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
          <span class="sr-only">Next</span>
          <i class="fas fa-chevron-right"></i>
        </a>
      </nav>
    </div>
</div>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  async function makePayment(amount, bookingDetails) {
    try {
      const response = await fetch('/bookings/create-order', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
          amount,
          vendorId: bookingDetails.vendorId,
          eventDate: bookingDetails.eventDate,
          guests: bookingDetails.guests,
          specialRequests: bookingDetails.specialRequests
        })
      });
      
      const order = await response.json();
      
      const options = {
        key: '<%= process.env.RAZORPAY_KEY_ID %>',
        amount: order.amount,
        currency: 'INR',
        name: 'Moment Crafters',
        description: 'Booking Payment',
        order_id: order.id,
        handler: async function(response) {
          const verification = await fetch('/bookings/verify-payment', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${localStorage.getItem('token')}`
            },
            body: JSON.stringify({
              ...response,
              vendorId: bookingDetails.vendorId,
              amount: amount * 100,
              eventDate: bookingDetails.eventDate,
              guests: bookingDetails.guests,
              specialRequests: bookingDetails.specialRequests
            })
          });
          
          const result = await verification.json();
          if (result.success) {
            alert('Payment successful!');
            window.location.href = '/bookings/success';
          } else {
            alert('Payment verification failed');
          }
        },
        theme: {
          color: '#6366F1'
        }
      };

      const rzp = new Razorpay(options);
      rzp.open();
    } catch (err) {
      console.error('Payment error:', err);
      alert('Payment failed. Please try again.');
    }
  }

  // Add event listener to booking buttons
  document.querySelectorAll('.book-now').forEach(button => {
    button.addEventListener('click', () => {
      const amount = button.dataset.amount;
      makePayment(amount);
    });
  });
</script>
